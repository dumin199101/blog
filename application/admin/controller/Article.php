<?php

namespace app\admin\controller;

use app\common\model\ArticleTag;
use app\common\model\Category;
use think\Controller;

class Article extends Controller
{
    protected $db;
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->db = new \app\common\model\Article();
    }

    //文章首页
    public function index(){
        $article_data = $this->db->getAll(2);
        $this->assign('article_data',$article_data);
        return $this->fetch();
    }

    //添加文章
    public function store(){
        if(request()->isPost()){
            $res = $this->db->store(input('post.'));
            if($res['valid']==1){
                $this->success($res['msg'],'index');
            }else{
                $this->error($res['msg']);
            }
        }else {
            //1.获取文章分类信息
            $cate_list = (new Category())->getAll();
            $this->assign('cate_list', $cate_list);
            //2.获取标签数据
            $tag_list = db('tag')->select();
            $this->assign('tag_list', $tag_list);
            return $this->fetch();
        }
    }

    //修改文章排序：
    public function changeSort()
    {
        if(request()->isAjax()){
            $res = $this->db->changeSort(input('post.'));
            if($res['valid']==1){
                $this->success($res['msg'],'index');
            }else{
                $this->error($res['msg']);
            }
        }
    }

    //文章编辑
    public function edit(){
         if(request()->isPost()){
              $res = $this->db->edit(input('post.'));
              if($res['valid']==1){
                  $this->success($res['msg'],'index');
              }else{
                  $this->error($res['msg']);
              }
         }else{
             $id = input('param.n_id');
             //1.获取文章分类信息
             $cate_list = (new Category())->getAll();
             $this->assign('cate_list', $cate_list);
             //2.获取标签数据
             $tag_list = db('tag')->select();
             $this->assign('tag_list', $tag_list);
             //3.获取旧数据
             $old_data  = $this->db
                 ->field('v_title,v_author,v_digest,v_desc,v_cover_src,n_cat_id,n_sort')
                 ->find($id);
             $this->assign('old_data',$old_data);
             //4.获取标签数据
             $tag_data = (new ArticleTag())->where('n_article_id=' . $id)
                 ->column('n_tag_id');
             $this->assign('tag_data',$tag_data);
             return $this->fetch();
         }
    }

    //删除到回收站
    public function delToRecycle()
    {
        $id = input('param.n_id');
        $res = $this->db->save(['n_isrecycle'=>1],['n_id'=>$id]);
        if($res){
            $this->success('删除到回收站成功','index');
        }else{
            $this->error('删除到回收站失败');
        }
    }

    //回收站列表
    public function recycle(){
        $article_data = $this->db->getAll(1);
        $this->assign('article_data',$article_data);
        return $this->fetch();
    }

    //从回收站恢复数据
    public function outToRecycle()
    {
        $id = input('param.n_id');
        $res = $this->db->save(['n_isrecycle'=>2],['n_id'=>$id]);
        if($res){
            $this->success('数据恢复成功','recycle');
        }else{
            $this->error('数据恢复失败');
        }
    }

    //删除数据
    public function del()
    {
        $id = input('get.id');
        $res = $this->db->del($id);
        if($res['valid']==1){
            $this->success($res['msg'],'index');
        }else {
            $this->error($res['msg']);
        }
    }

}
